name: Terraform-Apply

on:
  workflow_dispatch

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  plan_apply:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ARN }}
          role-session-name: ${{ secrets.session_name }}
          aws-region: ${{ vars.region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3
          terraform_wrapper: false

      - name: Terraform Init
        shell: bash
        id: init
        run:
          terraform init -no-color

      - name: Terraform Validate
        id: validate
        shell: bash
        run: terraform validate -no-color

      # - name: Create ECR
      #   id: ecr
      #   shell: bash
      #   run: terraform apply -auto-approve -no-color -target=aws_ecr_repository.repository

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     registries: ${{ secrets.AWS_ACCOUNT_ID }}
      #     mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-publish
      #   shell: bash
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: "ritik-test-ecr"
      #     IMAGE_TAG: "latest"
      #   run: |
      #     docker build app -f app/Dockerfile -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      #     docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tf.plan \
            -input=false \
            -no-color

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -no-color \
          -compact-warnings \
          -auto-approve \
          tf.plan
                          